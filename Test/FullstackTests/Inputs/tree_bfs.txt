n = 13

# create tree with n nodes
g = Graph(n)

i = 0
j = 1
while j + 2 < n:
	g.addEdge(i, j)
	g.addEdge(i, j + 1)
	g.addEdge(i, j + 2)

	j = j + 3
	i = i + 1

# bfs
visited = []
i = 0
while i < n:
    visited.append(false)
    i = i + 1

queue = [g.nodes[0]]
while queue.length > 0:
    cur_node = queue[0]
    queue.removeAt(0)

    if not visited[cur_node.id]:
        print(cur_node.id)
        visited[cur_node.id] = true
        neighbours = cur_node.outgoingNodes

        j = 0
        while j < neighbours.length:
            neighbour = neighbours[j]
            if not visited[neighbour.id]:
                queue.append(neighbour)
            j = j + 1
